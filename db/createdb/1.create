/*
 * Note: Engine not explicitly set. Is that a problem?  On my server, 
 *	SELECT @@default_storage_engine;
 * returns InnoDB
 */


create table school
(
	school_id	INT AUTO_INCREMENT NOT NULL,
	primary key(school_id),

	district_school_id	varchar(50) not null,
	unique key (district_school_id),

	canonical_school_name	varchar(50),
	unique key(canonical_school_name)

);

/* Permits multiple aliases for a single school */
create table school_name
(
	school_name_id	INT AUTO_INCREMENT NOT NULL,
	primary key(school_name_id),

	school_name	varchar(50) not null,
	unique key(school_name),

	school_id	int not null,
	foreign key (school_id) references school(school_id)
);


/*
 * This is something the district sends.  It is found in the Genesis schema
 * described at http://www.plainfieldnjk12.org/Departments/Genesis/DATA%20DICTIONARY/Genesis%20Data%20Dictionary%20version%202.pdf
 * (page 7) in both the Student and Address tables.  My observation is that
 * this does actually correspond to some concept of "family": Both my
 * sons have a shared code, and nobody else has that code.  I've seen the
 * same for families I've checked.  I don't know how this is used for
 * more complex family structures, though.
 */
create table family_code
(
	family_code_id	INT AUTO_INCREMENT NOT NULL,
	primary key(family_code_id),

	code		varchar(50) not null,
	unique key(code)
);




create table homeroom
(
	homeroom_id	INT AUTO_INCREMENT NOT NULL,
	primary key(homeroom_id),

	school_id	int not null,
	foreign key (school_id) references school(school_id),
	
	room		varchar(50) not null,
	teacher		varchar(50) not null,

	unique key (school_id, room)
);

/*
 * This joins to both homeroom and school even though homeroom also
 * joins to school.  This mimics what I've found in the Genesis 
 * schema, and it does make possible the admittedly odd, but not
 * impossible, case of a student "in" one school but with a homeroom
 * in another.
 * 
 * Given how the spreadsheet is currently built, this cannot occur in
 * the data we're sent.  But the spreadsheet's design is subject to change.
 */
create table student
(
	student_id	INT AUTO_INCREMENT NOT NULL,
	primary key(student_id),

	district_student_id	varchar(50) not null,
	unique key (district_student_id),


	first_name	varchar(50) not null,
	last_name	varchar(50) not null,

	date_of_birth	date null,

	school_id	int not null,
	foreign key (school_id) references school(school_id),
	
	homeroom_id	int not null,
	foreign key (homeroom_id) references homeroom(homeroom_id),

	family_code_id	int not null,
	foreign key (family_code_id) references family_code(family_code_id),

	grade		int not null

);


create table student_contact
(
	student_contact_id	INT AUTO_INCREMENT NOT NULL,
	primary key(student_contact_id),

	first_name	varchar(50) not null,
	last_name	varchar(50) not null,

	street_number	varchar(50) not null,
	street_name	varchar(50) not null,
	city		varchar(50) not null,
	state		varchar(50) not null,
	zip		varchar(50) not null,
	email		varchar(50) not null,
	primary_phone	varchar(50) not null,
	home_phone	varchar(50) not null,
	cell_phone	varchar(50) not null,
	house		varchar(50) not null
);
